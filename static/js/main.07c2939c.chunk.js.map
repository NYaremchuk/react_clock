{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","console","log","toLocaleTimeString","prevProps","name","props","clearInterval","setState","className","React","Component","App","isClockVisible","clockName","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,WACE,EAAKC,OAELC,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAE9B,OAZN,gCAgBE,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GAErBJ,QAAQC,IAAR,qCAA0CE,EAAUC,KAApD,eAA+DA,MArBrE,kCAyBE,WACEE,cAAcV,KAAKC,WA1BvB,kBA6BE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SA/BhB,oBAmCE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KAER,OACE,0BAAMc,UAAU,QACbd,EAAKQ,0BAxCd,GAA2BO,IAAMC,YCwDlBC,E,4MAtDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,4CAGb,WAAU,IAAD,OACCA,EAAcjB,KAAKH,MAAnBoB,UAER,OACE,yBAAKL,UAAU,OACb,wBAAIA,UAAU,SAAd,eAEA,yBAAKA,UAAU,gBAAf,iBAEGZ,KAAKH,MAAMmB,gBACR,kBAAC,EAAD,CAAOR,KAAMS,KAGnB,yBAAKL,UAAU,oBACb,4BACEM,KAAK,SACLN,UAAU,oBACVO,QAAS,WACP,EAAKR,SAAS,CAAEK,gBAAgB,MAJpC,cAUA,4BACEJ,UAAU,oBACVM,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEK,gBAAgB,MAJpC,cAUA,4BACEJ,UAAU,gBACVM,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CAAEM,UAAWG,KAAKC,MAAsB,IAAhBD,KAAKE,cAJ/C,yB,GAxCQT,IAAMC,WCDxBS,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.07c2939c.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => {\n        this.tick();\n        // eslint-disable-next-line no-console\n        console.log(this.state.date.toLocaleTimeString());\n      },\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <span className=\"time\">\n        {date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 1,\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">React clock</h1>\n\n        <div className=\"current-time\">\n          {`Current time: `}\n          {this.state.isClockVisible\n          && (<Clock name={clockName} />)}\n        </div>\n\n        <div className=\"button-container\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => {\n              this.setState({ isClockVisible: true });\n            }}\n          >\n            Show Clock\n          </button>\n\n          <button\n            className=\"btn btn-secondary\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isClockVisible: false });\n            }}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            className=\"btn btn-light\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ clockName: Math.floor(Math.random() * 101) });\n            }}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}